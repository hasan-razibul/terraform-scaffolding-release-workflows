name: Publish
on: release
jobs:
  get:
    runs-on: ubuntu-latest
    steps:
      - name: Get nyx release version
        uses: rez0n/actions-github-release@main
        id: nyx
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: "hasan-razibul/scaffolding"
          type: "stable"
      
      - name: echo release number   
        run : echo "${{ steps.nyx.outputs.release }}" | awk 'sub(/^.{1}/,"")' > version.txt

      - name: set output
        id: vars
        run: echo "version=$(cat version.txt)" >> $GITHUB_OUTPUT

      - name: echo version
        run : echo ${{ steps.vars.outputs.version }}
        
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
        
          
      - name: Create provider version endpoint
        run: |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-versions",
                        "attributes": {
                          "version": "${{ steps.vars.outputs.version }}",
                          "key-id": "${{ secrets.KEY_ID }}",
                          "protocols": [
                            "5.0"
                          ]
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions > provider_version_endpoint.json
      
      - name: show provider_version_endpoint file   
        run: cat provider_version_endpoint.json
        
      - name: extract shasums-upload link
        run : |
          jq -r .data.links'."shasums-upload"' provider_version_endpoint.json > shasums-upload.txt
          jq -r .data.links'."shasums-sig-upload"' provider_version_endpoint.json > shasums-sig-upload.txt
      
      - name: show upload links
        run: |
          cat shasums-upload.txt
          cat shasums-sig-upload.txt
      
      - uses: robinraju/release-downloader@v1.7
        with:
          latest: true
          fileName: "*"
      - run: |
          ls ${{ github.workspace }}
      
      - name : open sha256sums
        run: cat scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS
        
      - name: upload sha256sums files
        run : |
          curl -T scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS --url "$(cat shasums-upload.txt)"
          curl -T scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS.sig --url "$(cat shasums-sig-upload.txt)"
      
      
      
      
      # upload binary files for darwin_amd64

      - name: platform endpoint for darwin_amd64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_darwin_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > darwin_amd64_hash.txt
          cat darwin_amd64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_darwin_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > darwin_amd64_name.txt
          cat darwin_amd64_name.txt
          
      - name: set output hash darwin_amd64
        id: get_hash_darwin_amd64
        run: echo "hash=$(cat darwin_amd64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name darwin_amd64
        id: get_name_darwin_amd64
        run: echo "name=$(cat darwin_amd64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "darwin",
                          "arch": "amd64",
                          "shasum": "${{ steps.get_hash_darwin_amd64.outputs.hash }}",
                          "filename": "${{ steps.get_name_darwin_amd64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_darwin_amd64.json
      
      - name: show platform json file
        run: cat platform_darwin_amd64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_darwin_amd64.json > binary_upload_darwin_amd64.txt
        
      - name : show binary txt
        run : cat binary_upload_darwin_amd64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_darwin_amd64.outputs.name }} --url "$(cat binary_upload_darwin_amd64.txt)"


      # upload binary files for darwin_arm64

      - name: platform endpoint for darwin_arm64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_darwin_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > darwin_arm64_hash.txt
          cat darwin_arm64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_darwin_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > darwin_arm64_name.txt
          cat darwin_arm64_name.txt
          
      - name: set output hash darwin_arm64
        id: get_hash_darwin_arm64
        run: echo "hash=$(cat darwin_arm64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name darwin_arm64
        id: get_name_darwin_arm64
        run: echo "name=$(cat darwin_arm64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "darwin",
                          "arch": "arm64",
                          "shasum": "${{ steps.get_hash_darwin_arm64.outputs.hash }}",
                          "filename": "${{ steps.get_name_darwin_arm64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_darwin_arm64.json
      
      - name: show platform json file
        run: cat platform_darwin_arm64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_darwin_arm64.json > binary_upload_darwin_arm64.txt
        
      - name : show binary txt
        run : cat binary_upload_darwin_arm64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_darwin_arm64.outputs.name }} --url "$(cat binary_upload_darwin_arm64.txt)"
      
      
      # upload binary files for linux_amd64

      - name: platform endpoint for linux_amd64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_linux_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > linux_amd64_hash.txt
          cat linux_amd64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_linux_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > linux_amd64_name.txt
          cat linux_amd64_name.txt
          
      - name: set output hash linux_amd64
        id: get_hash_linux_amd64
        run: echo "hash=$(cat linux_amd64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name linux_amd64
        id: get_name_linux_amd64
        run: echo "name=$(cat linux_amd64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "linux",
                          "arch": "amd64",
                          "shasum": "${{ steps.get_hash_linux_amd64.outputs.hash }}",
                          "filename": "${{ steps.get_name_linux_amd64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_linux_amd64.json
      
      - name: show platform json file
        run: cat platform_linux_amd64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_linux_amd64.json > binary_upload_linux_amd64.txt
        
      - name : show binary txt
        run : cat binary_upload_linux_amd64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_linux_amd64.outputs.name }} --url "$(cat binary_upload_linux_amd64.txt)"
      

      # upload binary files for linux_arm64

      - name: platform endpoint for linux_arm64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_linux_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > linux_arm64_hash.txt
          cat linux_arm64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_linux_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > linux_arm64_name.txt
          cat linux_arm64_name.txt
          
      - name: set output hash linux_arm64
        id: get_hash_linux_arm64
        run: echo "hash=$(cat linux_arm64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name linux_arm64
        id: get_name_linux_arm64
        run: echo "name=$(cat linux_arm64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "linux",
                          "arch": "arm64",
                          "shasum": "${{ steps.get_hash_linux_arm64.outputs.hash }}",
                          "filename": "${{ steps.get_name_linux_arm64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_linux_arm64.json
      
      - name: show platform json file
        run: cat platform_linux_arm64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_linux_arm64.json > binary_upload_linux_arm64.txt
        
      - name : show binary txt
        run : cat binary_upload_linux_arm64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_linux_arm64.outputs.name }} --url "$(cat binary_upload_linux_arm64.txt)"


      # upload binary files for windows_amd64

      - name: platform endpoint for windows_amd64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_windows_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > windows_amd64_hash.txt
          cat windows_amd64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_windows_amd64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > windows_amd64_name.txt
          cat windows_amd64_name.txt
          
      - name: set output hash windows_amd64
        id: get_hash_windows_amd64
        run: echo "hash=$(cat windows_amd64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name windows_amd64
        id: get_name_windows_amd64
        run: echo "name=$(cat windows_amd64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "windows",
                          "arch": "amd64",
                          "shasum": "${{ steps.get_hash_windows_amd64.outputs.hash }}",
                          "filename": "${{ steps.get_name_windows_amd64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_windows_amd64.json
      
      - name: show platform json file
        run: cat platform_windows_amd64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_windows_amd64.json > binary_upload_windows_amd64.txt
        
      - name : show binary txt
        run : cat binary_upload_windows_amd64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_windows_amd64.outputs.name }} --url "$(cat binary_upload_windows_amd64.txt)"

      
      # upload binary files for windows_arm64

      - name: platform endpoint for windows_arm64
        run : |
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_windows_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f1 > windows_arm64_hash.txt
          cat windows_arm64_hash.txt
          awk '$2 == "scaffolding_${{ steps.vars.outputs.version }}_windows_arm64.zip" { print $0 }' scaffolding_${{ steps.vars.outputs.version }}_SHA256SUMS | cut  -d ' ' -f3 > windows_arm64_name.txt
          cat windows_arm64_name.txt
          
      - name: set output hash windows_arm64
        id: get_hash_windows_arm64
        run: echo "hash=$(cat windows_arm64_hash.txt)" >> $GITHUB_OUTPUT
        
      - name: set output name windows_arm64
        id: get_name_windows_arm64
        run: echo "name=$(cat windows_arm64_name.txt)" >> $GITHUB_OUTPUT
          
      - name: get platform
        run : |
          curl \
            --header "Authorization: Bearer ${{ secrets.TOKEN }}" \
            --header "Content-Type: application/vnd.api+json" \
            --request POST \
            --data '{
                      "data": {
                        "type": "registry-provider-version-platforms",
                        "attributes": {
                          "os": "windows",
                          "arch": "arm64",
                          "shasum": "${{ steps.get_hash_windows_arm64.outputs.hash }}",
                          "filename": "${{ steps.get_name_windows_arm64.outputs.name }}"
                        }
                      }
                    }' \
            https://app.terraform.io/api/v2/organizations/Test-nyx/registry-providers/private/Test-nyx/nyxx/versions/${{ steps.vars.outputs.version }}/platforms > platform_windows_arm64.json
      
      - name: show platform json file
        run: cat platform_windows_arm64.json
        
      - name: extract binary upload link
        run: jq -r .data.links'."provider-binary-upload"' platform_windows_arm64.json > binary_upload_windows_arm64.txt
        
      - name : show binary txt
        run : cat binary_upload_windows_arm64.txt
        
      - name : upload binary
        run : curl -T ${{ steps.get_name_windows_arm64.outputs.name }} --url "$(cat binary_upload_windows_arm64.txt)"
      



          
          

     

 
 

  
